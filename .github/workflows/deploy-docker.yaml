name: Build Images

on:
  push:
    branches:
      - stable

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

permissions:
  contents: 'write'
  id-token: 'write'
  packages: 'write'

jobs:
  build-images:
    name: Build Images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download server dist
        uses: actions/download-artifact@v4
        with:
          name: server-dist
          path: ./packages/backend/server/dist
      - name: Download server-native.node
        uses: actions/download-artifact@v4
        with:
          name: server-native.node
          path: ./packages/backend/server
      - name: Download server-native.node arm64
        uses: actions/download-artifact@v4
        with:
          name: server-native.arm64.node
          path: ./packages/backend/native
      - name: Download server-native.node arm64
        uses: actions/download-artifact@v4
        with:
          name: server-native.armv7.node
          path: .
      - name: move server-native files
        run: |
          mv ./packages/backend/native/server-native.node ./packages/backend/server/server-native.arm64.node
          mv server-native.node ./packages/backend/server/server-native.armv7.node
      - name: Setup env
        run: |
          echo "GIT_SHORT_HASH=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
          if [ -z "${{ inputs.flavor }}" ]
          then
            echo "RELEASE_FLAVOR=canary" >> "$GITHUB_ENV"
          else
            echo "RELEASE_FLAVOR=${{ inputs.flavor }}" >> "$GITHUB_ENV"
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          logout: false
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      # setup node without cache configuration
      # Prisma cache is not compatible with docker build cache
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: https://npm.pkg.github.com
          scope: '@zaviagodev'

      - name: Download web artifact
        uses: actions/download-artifact@v4
        with:
          name: web
          path: ./packages/frontend/apps/web/dist

      - name: Download admin artifact
        uses: actions/download-artifact@v4
        with:
          name: admin
          path: ./packages/frontend/admin/dist

      - name: Install Node.js dependencies
        run: |
          yarn config set --json supportedArchitectures.cpu '["x64", "arm64", "arm"]'
          yarn config set --json supportedArchitectures.libc '["glibc"]'
          yarn workspaces focus @affine/server --production

      - name: Generate Prisma client
        run: yarn workspace @affine/server prisma generate

      - name: Setup Version
        id: version
        uses: ./.github/actions/setup-version

      - name: Build front Dockerfile
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          pull: true
          platforms: linux/amd64,linux/arm64
          provenance: true
          file: .github/deployment/front/Dockerfile
          tags: ghcr.io/zaviagodev/affine-front:${{env.RELEASE_FLAVOR}}-${{ env.GIT_SHORT_HASH }},ghcr.io/zaviagodev/affine-front:${{env.RELEASE_FLAVOR}}

      - name: Build graphql Dockerfile
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          pull: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          provenance: true
          file: .github/deployment/node/Dockerfile
          tags: ghcr.io/zaviagodev/affine-graphql:${{env.RELEASE_FLAVOR}}-${{ env.GIT_SHORT_HASH }},ghcr.io/zaviagodev/affine-graphql:${{env.RELEASE_FLAVOR}}