name: Build Images

on:
  push:
    branches:
      - stable

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

permissions:
  contents: 'write'
  id-token: 'write'
  packages: 'write'

jobs:
  build-images:
    name: Build Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Version for server
        id: version
        uses: ./.github/actions/setup-version
      
      - name: Setup Node.js for server
        uses: ./.github/actions/setup-node
        with:
          electron-install: false
          extra-flags: workspaces focus @affine/server
      
      - name: Build Server
        run: yarn workspace @affine/server build

      - name: Setup Version for web
        id: version-web
        uses: ./.github/actions/setup-version
      
      - name: Setup Node.js for web
        uses: ./.github/actions/setup-node

      - name: Build Core
        run: yarn nx build @affine/web --skip-nx-cache
        env:
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          BUILD_TYPE: stable
          CAPTCHA_SITE_KEY: ${{ secrets.CAPTCHA_SITE_KEY }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: 'affine-web'
          SENTRY_RELEASE: ${{ steps.version.outputs.APP_VERSION }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          PERFSEE_TOKEN: ${{ secrets.PERFSEE_TOKEN }}
          MIXPANEL_TOKEN: ${{ secrets.MIXPANEL_TOKEN }}

      - name: Set up QEMU (for cross-platform builds)
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container
          install: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set GIT_SHORT_HASH
        run: echo "GIT_SHORT_HASH=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Build front Dockerfile
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          pull: true
          platforms: linux/amd64,linux/arm64
          provenance: true
          file: .github/deployment/front/Dockerfile
          tags: |
            ghcr.io/zaviagodev/affine-front:latest

      - name: Build graphql Dockerfile
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          pull: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          provenance: true
          file: .github/deployment/node/Dockerfile
          tags: |
            ghcr.io/zaviagodev/affine-graphql:latest
